/**
 * ConfigCat Public Management API
 * The purpose of this API is to access the ConfigCat platform programmatically. You can **Create**, **Read**, **Update** and **Delete** any entities like **Feature Flags, Configs, Environments** or **Products** within ConfigCat.  **Base API URL**: https://api.configcat.com  If you prefer the swagger documentation, you can find it here: [Swagger UI](https://api.configcat.com/swagger).  The API is based on HTTP REST, uses resource-oriented URLs, status codes and supports JSON  format.   **Important:** Do not use this API for accessing and evaluating feature flag values. Use the [SDKs](https://configcat.com/docs/sdk-reference/overview) or the [ConfigCat Proxy](https://configcat.com/docs/advanced/proxy/proxy-overview/) instead.  # OpenAPI Specification  The complete specification is publicly available in the following formats:  - [OpenAPI v3](https://api.configcat.com/docs/v1/swagger.json) - [Swagger v2](https://api.configcat.com/docs/v1/swagger.v2.json)  You can use it to generate client libraries in various languages with [OpenAPI Generator](https://github.com/OpenAPITools/openapi-generator) or [Swagger Codegen](https://swagger.io/tools/swagger-codegen/) to interact with this API.  # Authentication This API uses the [Basic HTTP Authentication Scheme](https://en.wikipedia.org/wiki/Basic_access_authentication).   <!-- ReDoc-Inject: <security-definitions> -->  # Throttling and rate limits All the rate limited API calls are returning information about the current rate limit period in the following HTTP headers:  | Header | Description | | :- | :- | | X-Rate-Limit-Remaining | The maximum number of requests remaining in the current rate limit period. | | X-Rate-Limit-Reset     | The time when the current rate limit period resets.        |  When the rate limit is exceeded by a request, the API returns with a `HTTP 429 - Too many requests` status along with a `Retry-After` HTTP header. 
 *
 * The version of the OpenAPI document: v1
 * Contact: support@configcat.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { ComparisonValueModel } from './comparisonValueModel';


/**
 * Describes a condition that is based on user attributes.
 */
export interface UserConditionModel { 
    /**
     * The User Object attribute that the condition is based on. Can be \"User ID\", \"Email\", \"Country\" or any custom attribute.
     */
    comparisonAttribute: string;
    /**
     * The comparison operator which defines the relation between the comparison attribute and the comparison value.
     */
    comparator: UserConditionModel.ComparatorEnum;
    comparisonValue: ComparisonValueModel;
}
export namespace UserConditionModel {
    export type ComparatorEnum = 'isOneOf' | 'isNotOneOf' | 'containsAnyOf' | 'doesNotContainAnyOf' | 'semVerIsOneOf' | 'semVerIsNotOneOf' | 'semVerLess' | 'semVerLessOrEquals' | 'semVerGreater' | 'semVerGreaterOrEquals' | 'numberEquals' | 'numberDoesNotEqual' | 'numberLess' | 'numberLessOrEquals' | 'numberGreater' | 'numberGreaterOrEquals' | 'sensitiveIsOneOf' | 'sensitiveIsNotOneOf' | 'dateTimeBefore' | 'dateTimeAfter' | 'sensitiveTextEquals' | 'sensitiveTextDoesNotEqual' | 'sensitiveTextStartsWithAnyOf' | 'sensitiveTextNotStartsWithAnyOf' | 'sensitiveTextEndsWithAnyOf' | 'sensitiveTextNotEndsWithAnyOf' | 'sensitiveArrayContainsAnyOf' | 'sensitiveArrayDoesNotContainAnyOf' | 'textEquals' | 'textDoesNotEqual' | 'textStartsWithAnyOf' | 'textNotStartsWithAnyOf' | 'textEndsWithAnyOf' | 'textNotEndsWithAnyOf' | 'arrayContainsAnyOf' | 'arrayDoesNotContainAnyOf';
    export const ComparatorEnum = {
        IsOneOf: 'isOneOf' as ComparatorEnum,
        IsNotOneOf: 'isNotOneOf' as ComparatorEnum,
        ContainsAnyOf: 'containsAnyOf' as ComparatorEnum,
        DoesNotContainAnyOf: 'doesNotContainAnyOf' as ComparatorEnum,
        SemVerIsOneOf: 'semVerIsOneOf' as ComparatorEnum,
        SemVerIsNotOneOf: 'semVerIsNotOneOf' as ComparatorEnum,
        SemVerLess: 'semVerLess' as ComparatorEnum,
        SemVerLessOrEquals: 'semVerLessOrEquals' as ComparatorEnum,
        SemVerGreater: 'semVerGreater' as ComparatorEnum,
        SemVerGreaterOrEquals: 'semVerGreaterOrEquals' as ComparatorEnum,
        NumberEquals: 'numberEquals' as ComparatorEnum,
        NumberDoesNotEqual: 'numberDoesNotEqual' as ComparatorEnum,
        NumberLess: 'numberLess' as ComparatorEnum,
        NumberLessOrEquals: 'numberLessOrEquals' as ComparatorEnum,
        NumberGreater: 'numberGreater' as ComparatorEnum,
        NumberGreaterOrEquals: 'numberGreaterOrEquals' as ComparatorEnum,
        SensitiveIsOneOf: 'sensitiveIsOneOf' as ComparatorEnum,
        SensitiveIsNotOneOf: 'sensitiveIsNotOneOf' as ComparatorEnum,
        DateTimeBefore: 'dateTimeBefore' as ComparatorEnum,
        DateTimeAfter: 'dateTimeAfter' as ComparatorEnum,
        SensitiveTextEquals: 'sensitiveTextEquals' as ComparatorEnum,
        SensitiveTextDoesNotEqual: 'sensitiveTextDoesNotEqual' as ComparatorEnum,
        SensitiveTextStartsWithAnyOf: 'sensitiveTextStartsWithAnyOf' as ComparatorEnum,
        SensitiveTextNotStartsWithAnyOf: 'sensitiveTextNotStartsWithAnyOf' as ComparatorEnum,
        SensitiveTextEndsWithAnyOf: 'sensitiveTextEndsWithAnyOf' as ComparatorEnum,
        SensitiveTextNotEndsWithAnyOf: 'sensitiveTextNotEndsWithAnyOf' as ComparatorEnum,
        SensitiveArrayContainsAnyOf: 'sensitiveArrayContainsAnyOf' as ComparatorEnum,
        SensitiveArrayDoesNotContainAnyOf: 'sensitiveArrayDoesNotContainAnyOf' as ComparatorEnum,
        TextEquals: 'textEquals' as ComparatorEnum,
        TextDoesNotEqual: 'textDoesNotEqual' as ComparatorEnum,
        TextStartsWithAnyOf: 'textStartsWithAnyOf' as ComparatorEnum,
        TextNotStartsWithAnyOf: 'textNotStartsWithAnyOf' as ComparatorEnum,
        TextEndsWithAnyOf: 'textEndsWithAnyOf' as ComparatorEnum,
        TextNotEndsWithAnyOf: 'textNotEndsWithAnyOf' as ComparatorEnum,
        ArrayContainsAnyOf: 'arrayContainsAnyOf' as ComparatorEnum,
        ArrayDoesNotContainAnyOf: 'arrayDoesNotContainAnyOf' as ComparatorEnum
    };
}


