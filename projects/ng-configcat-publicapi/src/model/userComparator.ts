/**
 * ConfigCat Public Management API
 * **Base API URL**: https://test-api.configcat.com  If you prefer the swagger documentation, you can find it here: [Swagger UI](https://test-api.configcat.com/swagger).  The purpose of this API is to access the ConfigCat platform programmatically.  You can **Create**, **Read**, **Update** and **Delete** any entities like **Feature Flags, Configs, Environments** or **Products** within ConfigCat.   The API is based on HTTP REST, uses resource-oriented URLs, status codes and supports JSON  and JSON+HAL format. Do not use this API for accessing and evaluating feature flag values. Use the [SDKs instead](https://configcat.com/docs/sdk-reference/overview).   # OpenAPI Specification  The complete specification is publicly available in the following formats:  - [OpenAPI v3](https://test-api.configcat.com/docs/v1/swagger.json) - [Swagger v2](https://test-api.configcat.com/docs/v1/swagger.v2.json)  You can use it to generate client libraries in various languages with [OpenAPI Generator](https://github.com/OpenAPITools/openapi-generator) or [Swagger Codegen](https://swagger.io/tools/swagger-codegen/) to interact with this API.  # Authentication This API uses the [Basic HTTP Authentication Scheme](https://en.wikipedia.org/wiki/Basic_access_authentication).   <!-- ReDoc-Inject: <security-definitions> -->  # Throttling and rate limits All the rate limited API calls are returning information about the current rate limit period in the following HTTP headers:  | Header | Description | | :- | :- | | X-Rate-Limit-Remaining | The maximum number of requests remaining in the current rate limit period. | | X-Rate-Limit-Reset     | The time when the current rate limit period resets.        |  When the rate limit is exceeded by a request, the API returns with a `HTTP 429 - Too many requests` status along with a `Retry-After` HTTP header. 
 *
 * The version of the OpenAPI document: v1
 * Contact: support@configcat.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


/**
 * The comparison operator the evaluation process must use when it compares the given user attribute\'s value with the comparison value.
 */
export type UserComparator = 'contains' | 'doesNotContain' | 'semVerIsOneOf' | 'semVerIsNotOneOf' | 'semVerLess' | 'semVerLessOrEquals' | 'semVerGreater' | 'semVerGreaterOrEquals' | 'numberEquals' | 'numberDoesNotEqual' | 'numberLess' | 'numberLessOrEquals' | 'numberGreater' | 'numberGreaterOrEquals' | 'sensitiveIsOneOf' | 'sensitiveIsNotOneOf' | 'dateTimeBefore' | 'dateTimeAfter' | 'sensitiveTextEquals' | 'sensitiveTextDoesNotEqual' | 'sensitiveTextStartsWith' | 'sensitiveTextNotStartsWith' | 'sensitiveTextEndsWith' | 'sensitiveTextNotEndsWith' | 'arrayContains' | 'arrayDoesNotContain';

export const UserComparator = {
    Contains: 'contains' as UserComparator,
    DoesNotContain: 'doesNotContain' as UserComparator,
    SemVerIsOneOf: 'semVerIsOneOf' as UserComparator,
    SemVerIsNotOneOf: 'semVerIsNotOneOf' as UserComparator,
    SemVerLess: 'semVerLess' as UserComparator,
    SemVerLessOrEquals: 'semVerLessOrEquals' as UserComparator,
    SemVerGreater: 'semVerGreater' as UserComparator,
    SemVerGreaterOrEquals: 'semVerGreaterOrEquals' as UserComparator,
    NumberEquals: 'numberEquals' as UserComparator,
    NumberDoesNotEqual: 'numberDoesNotEqual' as UserComparator,
    NumberLess: 'numberLess' as UserComparator,
    NumberLessOrEquals: 'numberLessOrEquals' as UserComparator,
    NumberGreater: 'numberGreater' as UserComparator,
    NumberGreaterOrEquals: 'numberGreaterOrEquals' as UserComparator,
    SensitiveIsOneOf: 'sensitiveIsOneOf' as UserComparator,
    SensitiveIsNotOneOf: 'sensitiveIsNotOneOf' as UserComparator,
    DateTimeBefore: 'dateTimeBefore' as UserComparator,
    DateTimeAfter: 'dateTimeAfter' as UserComparator,
    SensitiveTextEquals: 'sensitiveTextEquals' as UserComparator,
    SensitiveTextDoesNotEqual: 'sensitiveTextDoesNotEqual' as UserComparator,
    SensitiveTextStartsWith: 'sensitiveTextStartsWith' as UserComparator,
    SensitiveTextNotStartsWith: 'sensitiveTextNotStartsWith' as UserComparator,
    SensitiveTextEndsWith: 'sensitiveTextEndsWith' as UserComparator,
    SensitiveTextNotEndsWith: 'sensitiveTextNotEndsWith' as UserComparator,
    ArrayContains: 'arrayContains' as UserComparator,
    ArrayDoesNotContain: 'arrayDoesNotContain' as UserComparator
};

